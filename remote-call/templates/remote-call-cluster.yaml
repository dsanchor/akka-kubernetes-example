apiVersion: v1
kind: Template
metadata:
  name: remote-call-akka
  annotations:
    description: Openshift template for demonstrating an akka cluster microservice calling a remote akka actor in a different cluster
    tags: akka,microservices
    version: 0.0.1
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${MICROSERVICES_APP_NAME}
    name: ${MICROSERVICES_APP_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${MICROSERVICES_APP_NAME}
    name: ${MICROSERVICES_APP_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${MICROSERVICES_APP_NAME}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        uri: ${GIT_URI}
      contextDir: ${GIT_CONTEXT}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: s2i-java:latest
          namespace: openshift
      type: Source
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${MICROSERVICES_APP_NAME}
    name: ${MICROSERVICES_APP_NAME}-master
  spec:
    ports:
    - port: 2551
      protocol: TCP
      targetPort: 2551
    selector:
      run: ${MICROSERVICES_APP_NAME}-master
    clusterIP: None
- apiVersion: apps/v1beta1
  kind: StatefulSet
  metadata:
    labels:
      app: ${MICROSERVICES_APP_NAME}
      run: ${MICROSERVICES_APP_NAME}-master
    name: ${MICROSERVICES_APP_NAME}-master
  spec:
    serviceName: ${MICROSERVICES_APP_NAME}-master
    replicas: 2
    selector:
      matchLabels:
        run: ${MICROSERVICES_APP_NAME}-master
    template:
      metadata:
        labels:
          run: ${MICROSERVICES_APP_NAME}-master
      spec:
        containers:
        - name: ${MICROSERVICES_APP_NAME}-master
          image: ${IMAGE_REGISTRY}/${MICROSERVICES_APP_NAME}:latest
          env:
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: HOSTNAME_SUFFIX
            value: ${HOSTNAME_SUFFIX}
          - name: JAVA_OPTIONS
            value: ${JAVA_OPTIONS_MASTER}
          - name: CLUSTER
            value: ${CLUSTER}
          - name: JAVA_APP_JAR
            value: app.jar
          - name: AB_JOLOKIA_OFF
            value: ""
          - name: REMOTE_SERVICE_PATH
            value: ${REMOTE_SERVICE_PATH}
          - name: REMOTE_SERVICE_ADDRESS
            value: ${REMOTE_SERVICE_ADDRESS}
          livenessProbe:
            tcpSocket:
              port: 2551
          ports:
          - containerPort: 2551
            protocol: TCP
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${MICROSERVICES_APP_NAME}
    name: ${MICROSERVICES_APP_NAME}-worker
  spec:
    replicas: 3
    selector:
      app: ${MICROSERVICES_APP_NAME}-worker
    template:
      metadata:
        labels:
          app: ${MICROSERVICES_APP_NAME}-worker
      spec:
        containers:
        - name: ${MICROSERVICES_APP_NAME}-worker
          image: ${IMAGE_REGISTRY}/${MICROSERVICES_APP_NAME}:latest
          env:
          - name: JAVA_OPTIONS
            value: ${JAVA_OPTIONS_WORKER}
          - name: CLUSTER
            value: ${CLUSTER}
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.podIP
          - name: HOSTNAME_SUFFIX
            value: ""
          - name: JAVA_APP_JAR
            value: app.jar
          - name: AB_JOLOKIA_OFF
            value: ""
          - name: REMOTE_SERVICE_PATH
            value: ${REMOTE_SERVICE_PATH}
          - name: REMOTE_SERVICE_ADDRESS
            value: ${REMOTE_SERVICE_ADDRESS}
          livenessProbe:
            tcpSocket:
              port: 2551
          ports:
          - containerPort: 2551
            protocol: TCP
parameters:
- description: Microservices set name
  name: MICROSERVICES_APP_NAME
  required: true
  value: remote-call-akka
- description: Git URI for remote-call source
  name: GIT_URI
  required: true
  value: https://github.com/dsanchor/akka-openshift-cluster.git
- description: Git context for hello-world source
  name: GIT_CONTEXT
  required: true
  value: remote-call
- description: Hostname suffix for the headless service 
  name: HOSTNAME_SUFFIX
  value: .remote-call-akka-master
  required: true
- description: Master nodes java options 
  name: JAVA_OPTIONS_MASTER
  value: "-Dakka.cluster.seed-nodes.0=akka.tcp://RemoteCallSystem@remote-call-akka-master-0.remote-call-akka-master:2551 -Dakka.cluster.seed-nodes.1=akka.tcp://RemoteCallSystem@remote-call-akka-master-1.remote-call-akka-master:2551"
  required: true
- description: Microservice akka cluster name
  name: CLUSTER
  value: RemoteCallSystem
  required: true
- description: Worker nodes java options 
  name: JAVA_OPTIONS_WORKER
  value: "-Dakka.cluster.seed-nodes.0=akka.tcp://RemoteCallSystem@remote-call-akka-master-0.remote-call-akka-master:2551 -Dakka.cluster.seed-nodes.1=akka.tcp://RemoteCallSystem@remote-call-akka-master-1.remote-call-akka-master:2551"
- description: Master nodes java options 
  name: REMOTE_SERVICE_PATH
  value: "/user/helloWorldService"
  required: true
- description: Master nodes java options 
  name: REMOTE_SERVICE_ADDRESS
  value: "akka.tcp://HelloworldSystem@hello-world-akka-master-0.hello-world-akka-master:2551"
  required: true
- description: Image registry (172.30.1.1:5000/project)
  name: IMAGE_REGISTRY
  required: true

